<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/css" href="rss.css" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  
  <channel>
  <title>ColeW</title>
  <description>ColeW's b(log)ullshit</description>
  <language>en-us</language>
  <link>http://ColeW-Picaro.github.io/rss.xml</link>
  <atom:link href="http://ColeW-Picaro.github.io/rss.xml" rel="self" type="application/rss+xml" />

  <!-- LB -->

<item>
<title>#100DaysToOffload My Favorite STL Container</title>
<guid>https://ColeW-Picaro.github.io/2020.html#100daystooffload-my-favorite-stl-container.html</guid>
<pubDate>Tue, 19 May 2020 15:36:04 -0400</pubDate>
<description><![CDATA[
<p>
  Hi. I was browsing hackernews today and found #100DaysToOffload, which is a blogging movement encouraging people to publish 100 pieces of content on their personal blog in a year. The website says that's one post every 3.5 days, but I started a bit late for that.  There are 226 days left this year, so it'll be something every other day for me.
</br>
Before the coronavirus pandemic, I was journaling every day using emacs Org Journal. I really loved journaling because it helped me recognize things I did well and not so well during my day.  I could then use those reflections to not make the same mistake twice. I stopped journaling because when I went home for spring break I put my laptop in my room, but the computer that I'm at all day is somewhere else.  That could obviously be resolved, but now I'm here to do this for a while.
</br>
<h3>std::map</h3>
So, I love the C++ STL. The algorithms are awesome, iterators just make sense to me, and the containers are beautiful.  When I say "favorite STL container", I don't mean the best. They all have their own use cases and places where they shine, but my favorite one to use is the Map/Multimap.  A map is an associative container storing key-value pairs. Basically that means you declare a map with a key type <code>K</code> and a value type <code>V</code>, and you access the value of an entry using its key. Here's a quick example of that:
</p>
</br>
<div markdown="1">
  Sidenote: I have no idea what this markdown is gonna look like. Scary.
  ```
  #include <map>
  #include <std::string>
  
  int
  main () {
    // Initializtion
    std::map<std::string, int> numbers; // numbers maps strings to ints
    numbers["one"] = 1;                 // This maps the string "one" to the int 1
    numbers["two"] = 2;                 // You get the idea

    // Iterators
    auto num = numbers.begin ();  // std::map stores elements in order, std::unordered_map does not
    std::string key = num->first; // This gives the key of the entry
    int val = num->second;        // This gives the value of the entry
  }
  ```
</div>
</br>
<h3>Complexities</h3>
<p>
  Maps are implemented using a balanced binary tree, so all inserts, deletes, and searches are O(log n) complexity. This is because in order to get to an element you have to search to the level in the tree where it is. If the element you're operating on is at the maximum depth of the tree, <code>log n</code> gives you the depth of the tree where the element will be.  Maps are a happy medium between lists and vectors.  Vectors have linear inserts and deletes in the middle, but constant random access.  Lists have linear access, but constant inserts and deletes.  Maps sacrifice the constant time operations to have no linear operations. 
</p>
<h3>Use Cases</h3>
<p>
  Consider using a map for user access to an object with a string. You can create a map mapping strings to your object type so users can enter a string and get back the object that the string maps to.  You can create a quasi relational database this way.  For example: say a game you're making has in inventory system, and you want to let players search for an item in your inventory.  You can use a map&ltstring, item&gt to search for the item with the string the user entered. 
</p>
<h3>Further Reading</h3>
<p>
  <a href="https://en.cppreference.com/w/cpp/container/map">std::map on cppreference</a><\br>
  <a href="https://en.wikipedia.org/wiki/Red%E2%80%93black_tree">red-black trees on wikipedia</a><\br>
  <a href="https://en.cppreference.com/w/cpp/container">STL containers on cppreference</a><\br>
  <a href="https://100daystooffload.com/">#100DaysToOffload</a>
</p>
]]></description>
</item>


<item>
<title>Album A Day: Luv(sic) Hexalogy by Nujabes</title>
<guid>https://ColeW-Picaro.github.io/2019.html#album-a-day-luvsic-hexalogy-by-nujabes.html</guid>
<pubDate>Fri, 11 Oct 2019 11:23:08 -0500</pubDate>
<description><![CDATA[
</br><img src="https://proxy.duckduckgo.com/iu/?u=http%3A%2F%2Fimages.genius.com%2F184a5119df20ecf6a10564cbb62f7805.600x600x1.jpg&f=1&nofb=1" style="width:600px;height:600px;"></img>
<p>I couldn't think of an album to listen to today, so I listened to one I want everyone to know about.  The Luv(sic) Hexalogy is stellar, and there is no other word for it.  Each track invokes a unique and borderline addicting feeling that makes me want to listen to it every single day forever.  As the title suggests, this is a six part series by Japanese hip-hop artist Nujabes.  Every track features lyrics by the wonderful Shing02, who finished the album using beats from Nujabes's phone after his death in 2010.  This is a team made in hip-hop heaven.  Shing02 is an amazing lyricist, and Nujabes has timeless, versatile beats.  The main theme of the album is love, but it's not a lost romance with another person.  Shing02 is rapping about his relationship with music and the people in his music career (specifically Nujabes in part 5, which was made after his death).  The first half of the series was recorded before Nujabes's death.  In Part 1 (just titled luv(sic)), Shing02 has a more upbeat tone and attitude in the song.  As the series goes on into parts 2 and 3, he still has a positive attitude, but the lyrics become lighter.  The real turning point of the record is in part 4, which was recorded after Nujabes's death.  The beats become even more mellow and the lyrics take a wistful and mournful turn.  Parts 4 and 5 are Shing02's real tribute to Nujabes.  By part 6, Shing02's lyrics go back to being upbeat, but still light as they were in parts 2 adnd 3.  The series finalie comes full circle and you can really feel a big burden being lifted off of Shing02's shoulders in the lyrics.  It's almost as though he was haunted by Nujabes in a healthy, albeit stressful way.  This. Is. My. Favorite. Album. And I hope you can love it and appreciate it just as much as me.  Peace.</p>
]]></description>
</item>












<item>
<title>Album A Day: Coffee and Cigarettes by Jazzinuf
Album a Day: Coffee and Cigarettes by Jazzinuf</title>
<guid>https://ColeW-Picaro.github.io/2019.html#album-a-day-coffee-and-cigarettes-by-jazzinuf.html</guid>
<pubDate>Thu, 10 Oct 2019 15:36:12 -0500</pubDate>
<description><![CDATA[
<img src="https://lastfm-img2.akamaized.net/i/u/ar0/f53bf7c4f569c3e53c19ff0de5d5bd5f" style="width:600px;height:600px;"></br>

<p>Note: I'm not actually gonna write about an album every day, but I'm gonna try to listen to some </p> </br>
<p> Jazzinuf is a lo-fi artist, and I was introduced to the namesake song "Coffee and Cigarettes" a few days ago.  I don't listen to lo-fi religiously, but I enjoy it enough to give this album a listen.  I'm live writing this as I'm listening, and I'm at work so I'm not giving it my full attention. The album has a nice engaging intro track in "Oreos" which goes into the namesake track "Coffee and Cigarettes."  I absolutely love this track.  The Pulp Fiction sample at the start is cute and ntoo long, and the piano sample is more interesting than average.  The album feels episodic, with standard fade-in/outs on every track rather than being blended together.  This isn't necessarily a bad thing, but I always love seamless transitions between tracks.  Jazzinuf leans heavily toward piano and saxophone samples that are all over this genre, but I didn't recognize any overused samples, which is nice.  Other than that, it's really just a standard selection of lo-fi tracks.  Each track has a cute intro and makes you think, "Oh this beat kinda slaps," only to fade into the back of your mind for the rest of the song.  This isn't a negative thing to me, it's just a feature of the genre.  Some tracks are excluded in this and have a complete transition to a new beat, like "Girl with the Braided Hair."  The album becomes a little adventurous towards the end, with an unorthodox vocal sample in "Flying Train" and a high-tension sample in "The Walk."  The album goes back to lo-fi roots for the final track "When the Evening Comes," which has a standard beat and light vocal sample.  Overall, I'd say this LP is worth a go if you wanna turn your brain off.  It's not a very involved listening experience, but neither is anything in this genre.  Peace.</p>
]]></description>
</item>


<item>
<title>Piano Cover - Tiny Dancer</title>
<guid>https://ColeW-Picaro.github.io/2019.html#piano-cover-tiny-dancer.html</guid>
<pubDate>Sat, 30 Mar 2019 22:55:55 +0000</pubDate>
<description><![CDATA[
<p> I worked on this cover for the week after spring break when I didn't wanna study. <a href="https://www.youtube.com/watch?v=C6olIf4wBQo"> Check it out!</a><br>
  <iframe width="560" height="315" src="https://www.youtube.com/embed/C6olIf4wBQo" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe></p>
]]></description>
</item>


<item>
<title>I do a Podcast</title>
<guid>https://ColeW-Picaro.github.io/2019.html#i-do-a-podcast.html</guid>
<pubDate>Fri, 15 Mar 2019 00:12:21 +0000</pubDate>
<description><![CDATA[
<p>I have a podcast about Magic the Gathering called Cardboard Crusaders. We mostly talk about modern, but when cool things in other formats pop up, we talk about them.  Here's a <a href="https://archive.org/details/@cardboard_crusaders">link</a>. Also here's an <a href="http://fetchrss.com/rss/5c394e048a93f875578b45675c394dd28a93f890538b4567.xml">RSS link</a>. Enjoy.</p>
]]></description>
</item>




<item>
<title>My twitter bot is back up</title>
<guid>https://ColeW-Picaro.github.io/2019.html#my-twitter-bot-is-back-up.html</guid>
<pubDate>Thu, 14 Mar 2019 04:36:07 +0000</pubDate>
<description><![CDATA[

<p> Sometimes, you just need to let things go. Clearly, I haven't learned this lesson.
</br>
<a href="https://twitter.com/ColeW_Picaro">My Twitter</a>
</br>
<a href="https://twitter.com/CoIeW_Picaro">The bot's twitter</a></p>
]]></description>
</item>




















  </channel>
</rss>

